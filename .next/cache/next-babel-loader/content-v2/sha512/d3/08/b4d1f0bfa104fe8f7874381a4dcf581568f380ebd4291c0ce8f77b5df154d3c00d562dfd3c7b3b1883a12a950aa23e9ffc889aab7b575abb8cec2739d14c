{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\fci\\\\kalbonyan_elmarsos\\\\Udemy\\\\03.React-The-Complete-Guide(inclHooks,ReactRouter,Redux)\\\\23.A-Pretty-Deep-Dive-Introduction-to-Next.js\\\\practical-demo\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nexport default function Meetup(props) {\n  console.log(props.meetup);\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    title: props.meetup.title,\n    src: props.meetup.image,\n    description: props.meetup.description,\n    address: props.meetup.address // title={\"A First Meetup\"}\n    // src={\n    //   \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n    // }\n    // description={\"This is a first meetup!\"}\n    // address={\"Some address 5, 12345 Some City\"}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths(context) {\n  const client = await MongoClient.connect(\"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    // means i client used any dynamic route rather than m1, m2 then fire 404 error,,,, if true this means accept any route\n    paths: meetups.map(item => ({\n      params: {\n        meetupId: item._id.toString()\n      }\n    })) // paths: [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const connection = await MongoClient.connect(\"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\");\n  const db = connection.db();\n  const meetUpCollection = db.collection(\"meetups\");\n  const targetedMeetup = await meetUpCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log();\n  return {\n    props: {\n      meetup: {\n        id: targetedMeetup._id.toString(),\n        image: targetedMeetup.image,\n        title: targetedMeetup.title,\n        address: targetedMeetup.address,\n        description: targetedMeetup.description\n      } // meetup: {\n      //   title: \"A First Meetup\",\n      //   src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n      //   description: \"This is a first meetup!\",\n      //   address: \"Some address 5, 12345 Some City\",\n      // },\n\n    }\n  };\n}","map":{"version":3,"sources":["G:/fci/kalbonyan_elmarsos/Udemy/03.React-The-Complete-Guide(inclHooks,ReactRouter,Redux)/23.A-Pretty-Deep-Dive-Introduction-to-Next.js/practical-demo/pages/[meetupId]/index.js"],"names":["React","MeetupDetails","MongoClient","ObjectId","Meetup","props","console","log","meetup","title","image","description","address","getStaticPaths","context","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","item","params","meetupId","toString","getStaticProps","connection","meetUpCollection","targetedMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEH,KAAK,CAACG,MAAN,CAAaC,KADtB;AAEE,IAAA,GAAG,EAAEJ,KAAK,CAACG,MAAN,CAAaE,KAFpB;AAGE,IAAA,WAAW,EAAEL,KAAK,CAACG,MAAN,CAAaG,WAH5B;AAIE,IAAA,OAAO,EAAEN,KAAK,CAACG,MAAN,CAAaI,OAJxB,CAKE;AACA;AACA;AACA;AACA;AACA;;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,0FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACY;AACjBC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,IAAD,KAAW;AAC5BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,IAAI,CAACN,GAAL,CAASS,QAAT;AAAZ;AADoB,KAAX,CAAZ,CAFF,CAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBK,GAAP;AAkBD;AACD,OAAO,eAAeC,cAAf,CAA8BlB,OAA9B,EAAuC;AAC5C,QAAMgB,QAAQ,GAAGhB,OAAO,CAACe,MAAR,CAAeC,QAAhC;AAEA,QAAMG,UAAU,GAAG,MAAM/B,WAAW,CAACc,OAAZ,CACvB,0FADuB,CAAzB;AAIA,QAAMC,EAAE,GAAGgB,UAAU,CAAChB,EAAX,EAAX;AACA,QAAMiB,gBAAgB,GAAGjB,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMgB,cAAc,GAAG,MAAMD,gBAAgB,CAACE,OAAjB,CAAyB;AACpDd,IAAAA,GAAG,EAAEnB,QAAQ,CAAC2B,QAAD;AADuC,GAAzB,CAA7B;AAGAxB,EAAAA,OAAO,CAACC,GAAR;AACA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLG,MAAAA,MAAM,EAAE;AACN6B,QAAAA,EAAE,EAAEF,cAAc,CAACb,GAAf,CAAmBS,QAAnB,EADE;AAENrB,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KAFhB;AAGND,QAAAA,KAAK,EAAE0B,cAAc,CAAC1B,KAHhB;AAING,QAAAA,OAAO,EAAEuB,cAAc,CAACvB,OAJlB;AAKND,QAAAA,WAAW,EAAEwB,cAAc,CAACxB;AALtB,OADH,CAQL;AACA;AACA;AACA;AACA;AACA;;AAbK;AADF,GAAP;AAiBD","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nexport default function Meetup(props) {\r\n  console.log(props.meetup);\r\n  return (\r\n    <MeetupDetails\r\n      title={props.meetup.title}\r\n      src={props.meetup.image}\r\n      description={props.meetup.description}\r\n      address={props.meetup.address}\r\n      // title={\"A First Meetup\"}\r\n      // src={\r\n      //   \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      // }\r\n      // description={\"This is a first meetup!\"}\r\n      // address={\"Some address 5, 12345 Some City\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false, // means i client used any dynamic route rather than m1, m2 then fire 404 error,,,, if true this means accept any route\r\n    paths: meetups.map((item) => ({\r\n      params: { meetupId: item._id.toString() },\r\n    })),\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const connection = await MongoClient.connect(\r\n    \"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = connection.db();\r\n  const meetUpCollection = db.collection(\"meetups\");\r\n\r\n  const targetedMeetup = await meetUpCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  console.log();\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        id: targetedMeetup._id.toString(),\r\n        image: targetedMeetup.image,\r\n        title: targetedMeetup.title,\r\n        address: targetedMeetup.address,\r\n        description: targetedMeetup.description,\r\n      },\r\n      // meetup: {\r\n      //   title: \"A First Meetup\",\r\n      //   src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n      //   description: \"This is a first meetup!\",\r\n      //   address: \"Some address 5, 12345 Some City\",\r\n      // },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}