{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\fci\\\\kalbonyan_elmarsos\\\\Udemy\\\\03.React-The-Complete-Guide(inclHooks,ReactRouter,Redux)\\\\23.A-Pretty-Deep-Dive-Introduction-to-Next.js\\\\practical-demo\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nexport default function Meetup() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    title: \"A First Meetup\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    description: \"This is a first meetup!\",\n    address: \"Some address 5, 12345 Some City\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths(context) {\n  return {\n    fallback: false,\n    // means i client used any dynamic route rather than m1, m2 then fire 404 error,,,, if true this means accept any route\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const connection = await MongoClient.connect(\"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\");\n  const db = connection.db();\n  const meetUpCollection = db.collection(\"meetups\");\n  const targetedMeetup = await meetUpCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetup: targetedMeetup // meetup: {\n      //   title: \"A First Meetup\",\n      //   src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n      //   description: \"This is a first meetup!\",\n      //   address: \"Some address 5, 12345 Some City\",\n      // },\n\n    }\n  };\n}","map":{"version":3,"sources":["G:/fci/kalbonyan_elmarsos/Udemy/03.React-The-Complete-Guide(inclHooks,ReactRouter,Redux)/23.A-Pretty-Deep-Dive-Introduction-to-Next.js/practical-demo/pages/[meetupId]/index.js"],"names":["React","MeetupDetails","Meetup","getStaticPaths","context","fallback","paths","params","meetupId","getStaticProps","connection","MongoClient","connect","db","meetUpCollection","collection","targetedMeetup","findOne","_id","props","meetup"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAE,gBADT;AAEE,IAAA,GAAG,EACD,wHAHJ;AAKE,IAAA,WAAW,EAAE,yBALf;AAME,IAAA,OAAO,EAAE;AANX;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACY;AACjBC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KADK,EAML;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KANK;AAFF,GAAP;AAeD;AACD,OAAO,eAAeC,cAAf,CAA8BL,OAA9B,EAAuC;AAC5C,QAAMI,QAAQ,GAAGJ,OAAO,CAACG,MAAR,CAAeC,QAAhC;AAEA,QAAME,UAAU,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACvB,0FADuB,CAAzB;AAIA,QAAMC,EAAE,GAAGH,UAAU,CAACG,EAAX,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,cAAc,GAAG,MAAMF,gBAAgB,CAACG,OAAjB,CAAyB;AAAEC,IAAAA,GAAG,EAAEV;AAAP,GAAzB,CAA7B;AAEA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEJ,cADH,CAEL;AACA;AACA;AACA;AACA;AACA;;AAPK;AADF,GAAP;AAWD","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\n\r\nexport default function Meetup() {\r\n  return (\r\n    <MeetupDetails\r\n      title={\"A First Meetup\"}\r\n      src={\r\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      }\r\n      description={\"This is a first meetup!\"}\r\n      address={\"Some address 5, 12345 Some City\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths(context) {\r\n  return {\r\n    fallback: false, // means i client used any dynamic route rather than m1, m2 then fire 404 error,,,, if true this means accept any route\r\n    paths: [\r\n      {\r\n        params: {\r\n          meetupId: \"m1\",\r\n        },\r\n      },\r\n      {\r\n        params: {\r\n          meetupId: \"m2\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const connection = await MongoClient.connect(\r\n    \"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = connection.db();\r\n  const meetUpCollection = db.collection(\"meetups\");\r\n\r\n  const targetedMeetup = await meetUpCollection.findOne({ _id: meetupId });\r\n\r\n  return {\r\n    props: {\r\n      meetup: targetedMeetup,\r\n      // meetup: {\r\n      //   title: \"A First Meetup\",\r\n      //   src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n      //   description: \"This is a first meetup!\",\r\n      //   address: \"Some address 5, 12345 Some City\",\r\n      // },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}