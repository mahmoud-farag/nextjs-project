{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\fci\\\\kalbonyan_elmarsos\\\\Udemy\\\\03.React-The-Complete-Guide(inclHooks,ReactRouter,Redux)\\\\23.A-Pretty-Deep-Dive-Introduction-to-Next.js\\\\practical-demo\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\nexport default function Meetup() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    title: \"A First Meetup\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    description: \"This is a first meetup!\",\n    address: \"Some address 5, 12345 Some City\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths(context) {\n  const client = await MongoClient.connect(\"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    // means i client used any dynamic route rather than m1, m2 then fire 404 error,,,, if true this means accept any route\n    paths: meetups.map(item => ({\n      params: {\n        meetupId: item._id.toString()\n      }\n    })) // paths: [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // const connection = await MongoClient.connect(\n  //   \"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\"\n  // );\n  // const db = connection.db();\n  // const meetUpCollection = db.collection(\"meetups\");\n  // const targetedMeetup = await meetUpCollection.findOne({\n  //   _id: ObjectId(meetupId),\n  // });\n\n  return {\n    props: {\n      // meetup: targetedMeetup,\n      meetup: {\n        title: \"A First Meetup\",\n        src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        description: \"This is a first meetup!\",\n        address: \"Some address 5, 12345 Some City\"\n      }\n    }\n  };\n}","map":{"version":3,"sources":["G:/fci/kalbonyan_elmarsos/Udemy/03.React-The-Complete-Guide(inclHooks,ReactRouter,Redux)/23.A-Pretty-Deep-Dive-Introduction-to-Next.js/practical-demo/pages/[meetupId]/index.js"],"names":["React","MeetupDetails","MongoClient","Meetup","getStaticPaths","context","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","item","params","meetupId","toString","getStaticProps","props","meetup","title","src","description","address"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAE,gBADT;AAEE,IAAA,GAAG,EACD,wHAHJ;AAKE,IAAA,WAAW,EAAE,yBALf;AAME,IAAA,OAAO,EAAE;AANX;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,0FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACY;AACjBC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,IAAD,KAAW;AAC5BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,IAAI,CAACN,GAAL,CAASS,QAAT;AAAZ;AADoB,KAAX,CAAZ,CAFF,CAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBK,GAAP;AAkBD;AACD,OAAO,eAAeC,cAAf,CAA8BlB,OAA9B,EAAuC;AAC5C,QAAMgB,QAAQ,GAAGhB,OAAO,CAACe,MAAR,CAAeC,QAAhC,CAD4C,CAG5C;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACL;AACAC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,gBADD;AAENC,QAAAA,GAAG,EAAE,wHAFC;AAGNC,QAAAA,WAAW,EAAE,yBAHP;AAINC,QAAAA,OAAO,EAAE;AAJH;AAFH;AADF,GAAP;AAWD","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nexport default function Meetup() {\r\n  return (\r\n    <MeetupDetails\r\n      title={\"A First Meetup\"}\r\n      src={\r\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      }\r\n      description={\"This is a first meetup!\"}\r\n      address={\"Some address 5, 12345 Some City\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false, // means i client used any dynamic route rather than m1, m2 then fire 404 error,,,, if true this means accept any route\r\n    paths: meetups.map((item) => ({\r\n      params: { meetupId: item._id.toString() },\r\n    })),\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  // const connection = await MongoClient.connect(\r\n  //   \"mongodb+srv://mahmoud:admin@taskmanagerdb.rd2ff.mongodb.net/?retryWrites=true&w=majority\"\r\n  // );\r\n\r\n  // const db = connection.db();\r\n  // const meetUpCollection = db.collection(\"meetups\");\r\n\r\n  // const targetedMeetup = await meetUpCollection.findOne({\r\n  //   _id: ObjectId(meetupId),\r\n  // });\r\n\r\n  return {\r\n    props: {\r\n      // meetup: targetedMeetup,\r\n      meetup: {\r\n        title: \"A First Meetup\",\r\n        src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n        description: \"This is a first meetup!\",\r\n        address: \"Some address 5, 12345 Some City\",\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}